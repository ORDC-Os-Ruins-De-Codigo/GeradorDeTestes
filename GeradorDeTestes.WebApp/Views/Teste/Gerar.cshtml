﻿@using GeradorDeTestes.Dominio.ModuloMateria
@using GeradorDeTestes.Dominio.ModuloTeste
@model GerarTesteViewModel

@{
    Layout = "_Layout";
    ViewBag.Titulo = "Gerar Teste";
}

<hr />
<div class="row justify-content-center my-5">
    <div class="col-md-8">
        <div class="card rounded-4 border-0">
            <div class="card-body p-md-5">
                <form asp-action="Gerar" method="post">
                    <h3>Gerar Novo Teste</h3>

                    <div class="form-group d-grid gap-2 mt-3">
                        <label asp-for="Titulo" class="control-label fs-5">Título:</label>
                        <input asp-for="Titulo" class="form-control" />
                        <span asp-validation-for="Titulo" class="text-danger"></span>
                    </div>

                    <div class="form-group d-grid gap-2 mt-3">
                        <label asp-for="DisciplinaId" class="control-label fs-5">Disciplina:</label>
                        <select asp-for="DisciplinaId" class="form-select" id="disciplinaSelect">
                            <option value="">Selecione uma disciplina</option>
                            @foreach (var d in Model.Disciplinas) {
                                <option value="@d.Id">@d.Nome</option>
                            }
                        </select>
                        <span asp-validation-for="DisciplinaId" class="text-danger"></span>
                    </div>

                    <div class="form-group d-grid gap-2 mt-3">
                        <label asp-for="MateriaId" class="control-label fs-5">Matéria:</label>
                        <select asp-for="MateriaId" class="form-select" id="materiaSelect">
                            <option value="">Selecione uma matéria</option>
                            @foreach (var m in Model.Materias) {
                                <option value="@m.Id"
                                        selected="@(m.Id == Model.MateriaId ? "selected" : null)"
                                        data-disciplina="@m.Disciplina.Id"
                                        data-serie="@((int)m.Serie)">
                                    @m.Nome
                                </option>

                            }
                        </select>
                        <span asp-validation-for="MateriaId" class="text-danger"></span>
                    </div>

                    <input type="hidden" asp-for="Serie" id="inputSerie" />

                    <div class="form-group d-grid gap-2 mt-3">
                        <label asp-for="QuantidadeQuestoes" class="control-label fs-5">Quantidade de Questões:</label>
                        <input asp-for="QuantidadeQuestoes" class="form-control" type="number" />
                        <span asp-validation-for="QuantidadeQuestoes" class="text-danger"></span>
                    </div>

                    <div class="form-group d-flex justify-content-end gap-3 mt-4">
                        <button type="submit" class="btn btn-outline-primary" formaction="/testes/preview">
                            <i class="bi bi-eye"></i> Visualizar Questões
                        </button>
                    </div>

                    @(Model.QuestoesSorteadas != null && Model.QuestoesSorteadas.Any()) {
                        <div class="mt-5">
                            <h5>Questões Sorteadas:</h5>
                            <ul class="list-group">
                                @foreach (var questao in Model.QuestoesSorteadas) {
                                    <li class="list-group-item">
                                        <strong>@questao.Enunciado</strong>
                                        <ul class="mt-2">
                                            @{
                                                var letras = new[] { "a)", "b)", "c)", "d)" };
                                                int i = 0;
                                            }
                                            @foreach (var alternativa in questao.Alternativas) {
                                                <li>@letras[i] @alternativa.Texto</li>
                                                i++;
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>


                            <div class="form-group d-flex justify-content-end gap-3 mt-4">
                                <button type="submit" class="btn btn-primary px-5">Gerar Teste</button>
                            </div>
                        </div>

                        <div class="form-group d-flex gap-2 mt-3">
                            @Html.CheckBoxFor(x => x.TipoTeste, new { @class = "form-check-input" })
                            <label asp-for="TipoTeste" class="form-check-label">Teste de Recuperacão</label>
                        </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        disciplinaSelect.addEventListener('change', (e) => {
            var disciplinaId = e.target.value;

            for (const option of materiaSelect.options) {
                const optionDisciplinaId = option.dataset.disciplina;

                if (!optionDisciplinaId || optionDisciplinaId === disciplinaId) {
                    option.hidden = false;
                } else {
                    option.hidden = true;
                }
            }

            materiaSelect.value = "";
        });

        var materiaSelect = document.querySelector("#materiaSelect");
        var inputSerie = document.querySelector("#inputSerie");

        materiaSelect.addEventListener("change", () => {
            for (const option of materiaSelect.options){
                if (option.selected == true) {
                    inputSerie.value = option.dataset.serie
                }
            }
        })
    </script>
}